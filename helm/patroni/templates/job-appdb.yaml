{{- if .Values.appdb.create }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "patroni.fullname" . }}
  labels:
    app: {{ template "patroni.fullname" . }}
    chart: {{ template "patroni.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    project: {{ template "patroni.project" . }}
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      labels:
        app: {{ template "patroni.fullname" . }}
        project: {{ template "patroni.project" . }}
    spec:
      containers:
        - name: initdb
          image: postgres:14.2-alpine
          imagePullPolicy: Always
          command: ["bash", "-c"]
          args:
            - |
              echo starting;
              set -euo pipefail;
              echo "select 'create database $PGDATABASE_NAME' where not exists (select from pg_database where datname = '$PGDATABASE_NAME')\gexec" | psql -d postgres
              psql -d $PGDATABASE_NAME -qta --set on_error_stop=1 <<eof
                do
                \$do\$
                begin
                  if not exists (select from pg_catalog.pg_roles where rolname = '$APPUSER_USERNAME') then
                      create role $APPUSER_USERNAME login password '$APPUSER_PASSWORD';
                      grant all privileges on database $PGDATABASE_NAME to $APPUSER_USERNAME;
                  end if;
                end
                \$do\$;
              eof
              echo "done"
          env:
            - name: PGHOST
              value: {{ template "patroni.fullname" . }}
            - name: PGPORT
              value: "5432"
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ template "patroni.fullname" . }}
                  key: username-superuser
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "patroni.fullname" . }}
                  key: password-superuser
            - name: PGDATABASE_NAME
              value: {{ .Values.appdb.dbname }}
            - name: APPUSER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "patroni.fullname" . }}
                  key: username-appuser
            - name: APPUSER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "patroni.fullname" . }}
                  key: password-appuser
      restartPolicy: Never
  backoffLimit: 1
{{- end }}
