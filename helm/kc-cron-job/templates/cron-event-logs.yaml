apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "..fullname" . }}-event-logs
  namespace: {{ .Values.namespace.eventLogs }}
  labels:
    app.kubernetes.io/name: {{ include "..name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "..chart" . }}
spec:
  # see https://crontab.guru/#0_9_*_*_*
  schedule: "0 18 * * *"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ include "..name" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
        spec:
          initContainers:
            - name: initdb
              image: postgres:11.6-alpine
              command: ["bash", "-c"]
              args:
                - |
                  echo starting;
                  set -euo pipefail;
                  echo "select 'create database $PGDATABASE_NAME' where NOT exists (select from pg_database where datname = '$PGDATABASE_NAME')\gexec" | psql -d postgres
                  psql -d $PGDATABASE_NAME -qtA --set ON_ERROR_STOP=1 <<EOF
                    create table if not exists public.sso_logs (
                      id serial not null,
                      timestamp timestamp,
                      sequence int,
                      logger_class_name varchar(1000),
                      logger_name varchar(1000),
                      level varchar(1000),
                      message jsonb,
                      thread_name varchar(1000),
                      thread_id int,
                      mdc jsonb,
                      ndc varchar(1000),
                      host_name varchar(1000),
                      process_name varchar(1000),
                      process_id int,
                      version varchar(1000)
                    );
                  EOF
              env:
                - name: PGHOST
                  value: {{ .Values.pgHost }}
                - name: PGPORT
                  value: "5432"
                - name: PGUSER
                  value: postgres
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: kc-cron-patroni
                      key: password-superuser
                - name: PGDATABASE_NAME
                  value: rhsso
          containers:
            - name: {{ .Chart.Name }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command:
                - node
                - event-logs.js
              env:
                - name: RELEASE_REVISION
                  value: "{{ .Release.Revision }}"
                - name: RETENTION_PERIOD_DAYS
                  value: '30'
                - name: PGHOST
                  value: {{ .Values.pgHost }}
                - name: PGPORT
                  value: "5432"
                - name: PGUSER
                  value: postgres
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: kc-cron-patroni
                      key: password-superuser
                - name: PGDATABASE
                  value: rhsso
              volumeMounts:
                - mountPath: /logs
                  name: logs-volume
          volumes:
            - name: logs-volume
              persistentVolumeClaim:
                claimName: sso-keycloak-logs
          restartPolicy: Never
