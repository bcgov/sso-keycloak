apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "..fullname" . }}-active-sessions
  namespace: {{ .Values.namespace.activeSessions }}
  labels:
    app.kubernetes.io/name: {{ include "..name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ include "..chart" . }}
spec:
  # see https://crontab.guru/every-2-hours
  schedule: "0 */2 * * *"
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
            app.kubernetes.io/name: {{ include "..name" . }}
            app.kubernetes.io/instance: {{ .Release.Name }}
        spec:
          initContainers:
            - name: initdb
              image: postgres:11.6-alpine
              command: ["bash", "-c"]
              args:
                - |
                  echo starting;
                  set -euo pipefail;
                  echo "select 'create database $PGDATABASE_NAME' where NOT exists (select from pg_database where datname = '$PGDATABASE_NAME')\gexec" | psql -d postgres
                  psql -d $PGDATABASE_NAME -qtA --set ON_ERROR_STOP=1 <<EOF
                    create table if not exists public.active_sessions (
                        id serial not null,
                        keycloak_url varchar(1000),
                        realm varchar(1000),
                        session_count int,
                        client_id varchar(1000),
                        created_at timestamp with time zone default current_timestamp,
                        primary key(id)
                    );
                  EOF
              env:
                - name: PGHOST
                  value: kc-cron-patroni
                - name: PGPORT
                  value: "5432"
                - name: PGUSER
                  value: postgres
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: kc-cron-patroni
                      key: password-superuser
                - name: PGDATABASE_NAME
                  value: rhsso
          containers:
            - name: {{ .Chart.Name }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              command:
                - node
                - active-sessions.js
              env:
                - name: RELEASE_REVISION
                  value: "{{ .Release.Revision }}"
                - name: PGHOST
                  value: kc-cron-patroni
                - name: PGPORT
                  value: "5432"
                - name: PGUSER
                  value: postgres
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: kc-cron-patroni
                      key: password-superuser
                - name: PGDATABASE
                  value: rhsso
                - name: KEYCLOAK_URL
                  valueFrom:
                    secretKeyRef:
                      name: kc-cron-service-account
                      key: keycloak-url
                - name: KEYCLOAK_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: kc-cron-service-account
                      key: client-id
                - name: KEYCLOAK_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: kc-cron-service-account
                      key: client-secret
          restartPolicy: Never
